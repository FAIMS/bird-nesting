/********************************** REVISITS **********************************/
addOnEvent("Control/Revisit/Compute_Revisits",     "click", "computeRevisits()");
//addOnEvent("Control/Revisit/Perform_Next_Revisit", "click", "performNextRevisit()");
addOnEvent("Control/Revisit/Revisit",              "show",  "populateDaysDropdown()");

populateDaysDropdown() {
  String daysRef = "Control/Revisit/Days";

  List days = new ArrayList();
  days.add(new NameValuePair("Day before Yesterday" , "-2 Days"));
  days.add(new NameValuePair("Yesterday"            , "-1 Day" ));
  days.add(new NameValuePair("Today"                , "+0 days"));
  days.add(new NameValuePair("Tomorrow"             , "+1 Day" ));
  days.add(new NameValuePair("Day After Tomorrow"   , "+2 Days"));

  populateDropDown(daysRef, days);
}

getRevisitsQuery() {
  String daysRef = "Control/Revisit/Days";
  String daysVal = getFieldValue(daysRef);

  String q = "";
  q += " select uuid, dayDue, response, tasks";
  q += "   from (select dayDue, tasks, parentchild.parentuuid as uuid";
  q += "         from (select dayDue, 'Check: '||group_concat(taskName, ', ') as tasks, nestuuid";
  q += "                 from taskList";
  q += "               group by nestuuid, dayDue";
  q += "               order by aenttypenameorder, dayDue";
  q += "                )";
  q += "           JOIN parentchild on (parentchild.childuuid = nestuuid)";
  q += "          where parentchild.parentaenttypename = 'Box'";
  q += "            and dayDue >= date(current_date, '{days}')";
  q += "          order by dayDue";
  q += "           ) JOIN latestNonDeletedArchEntFormattedIdentifiers USING (uuid)";
  q += " ";
  q += "   order by dayDue";
  q  = replaceFirst(q, "{days}", daysVal);

  return q;
}

computeRevisits() {
  String q        = getRevisitsQuery();
  String tableRef = "Control/Revisit/Revisit";

  headers        = new ArrayList();
  actionName     = "Revisit";
  actionIdx      = 0;
  actionCallback = "loadEntityFromTable()";

  headers.add("");
  headers.add("Day Due");
  headers.add("Record");
  headers.add("Task(s)");

  populateTableRaw(
      tableRef,
      q,
      headers,
      actionName,
      actionIdx,
      actionCallback
  );
}

performNextRevisit() {
  String q = getRevisitsQuery();
  FetchCallback loadNextEntity = new FetchCallback() {
    onFetch(result){
      if      ( result        == null) { ; }
      else if ( result.size() == 0   ) { ; }
      else if ( result.get(0) == null) { ; }
      else                             loadEntityFrom(result.get(0));
    }
  };

  fetchOne(q, loadNextEntity);
}

loadEntityFromTable() {
  uuid = getTableValue();
  loadEntityFrom(uuid); // Auto-gen'd function
}

makeTableViewViews() {
  fetchOne(" drop view if exists truncFormattedIdentifier;", null);
  fetchOne(" create view truncFormattedIdentifier as" +
           "     select uuid, format(trim(formatstring,'-'), null, measure, freetext, certainty) as response" +
           "                                 from latestnondeletedaentvalue join attributekey using (attributeid)" +
           "                                 where attributename in ('Nest Nest ID');", null);
  fetchOne(" drop view if exists tasklist;", null);
  fetchOne(" create view tasklist as" +
           "    select date(replace(measure,'/','-'), '+3 day') as dayDue, response as taskName, uuid as nestuuid, 3 as aenttypenameorder" +
           "     from latestnondeletedaentvalue" +
           "     join truncFormattedIdentifier as task using (uuid)" +
           "     join attributekey using (attributeid)" +
           "    where attributename = 'Actual Day of Hatching'" +
           "    union" +
           "   select date(replace(measure,'/','-'), '+7 day') as dayDue, response as taskName, uuid as nestuuid, 2 as aenttypenameorder" +
           "     from latestnondeletedaentvalue" +
           "     join truncFormattedIdentifier as task using (uuid)" +
           "     join attributekey using (attributeid)" +
           "    where attributename = 'Actual Day of Hatching'" +
           "    union" +
           "   select date(replace(measure,'/','-'), '+11 day') as dayDue, response as taskName, uuid as nestuuid, 2 as aenttypenameorder" +
           "     from latestnondeletedaentvalue" +
           "     join truncFormattedIdentifier as task using (uuid)" +
           "     join attributekey using (attributeid)" +
           "    where attributename = 'Actual Day of Hatching'" +
           "    union" +
           "   select date(replace(measure,'/','-'), '+18 day') as dayDue, response as taskName, uuid as nestuuid, 2 as aenttypenameorder" +
           "     from latestnondeletedaentvalue" +
           "     join truncFormattedIdentifier as task using (uuid)" +
           "     join attributekey using (attributeid)" +
           "    where attributename = 'Actual Day of Hatching'" +
           "    order by taskName desc, aenttypenameorder, dayDue;", null);
}
makeTableViewViews();
