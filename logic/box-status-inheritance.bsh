/*************************** BOX STATUS INHERITANCE ***************************/
/* Inheritance is done in rever order (i.e. child to parent instead of parent */
/* to child). The inherited value is not saved in the recipient arch ent. It  */
/* is merely displayed.                                                       */
/*                                                                            */
/* There are two cases to consider when updating the web view:                */
/*   1. A BOX STATUS WAS JUST SAVED -- In this case, the parent's (Box's) web */
/*      view should be updated immediately after the child (Box Status) is    */
/*      saved.                                                                */
/*   2. AN EXISTING BOX WAS JUST LOADED -- The Box's web view should be       */
/*      upated immediately after it was loaded.                               */
/*   3. A NEW BOX WAS CREATED                                                 */
/******************************************************************************/
updateBoxStatusWebView() {
  String tabgroup     = "Box";
  String boxUuid      = getUuid(tabgroup);
  String refBoxStatus = "Box/Box/Box_Status";

  if (isNull(boxUuid)) return;

  String q = "";
  q += " /* Get the Box Status attribute.";
  q += "  */";
  q += " SELECT vocabname";
  q += " FROM   latestnondeletedaentvalue";
  q += " JOIN   attributekey USING (attributeid)";
  q += " JOIN   vocabulary   USING (attributeid, vocabid)";
  q += " WHERE  attributename = 'Box Status'";
  q += " AND    uuid IN (";
  q += " ";
  q += "     /* Select latest Box Status uuid";
  q += "      */";
  q += "     SELECT    childuuid";
  q += "       FROM    parentchild";
  q += "       JOIN    createdmodifiedatby ON (uuid=childuuid)";
  q += "      WHERE    parentuuid         = '{boxUuid}'";
  q += "        AND    parentaenttypename = 'Box'";
  q += "        AND    childaenttypename  = 'Box Status'";
  q += "      ORDER BY createdat DESC";
  q += "      LIMIT    1";
  q += " ";
  q += " )";
  q  = replaceFirst(q, "{boxUuid}", boxUuid);

  FetchCallback populate = new FetchCallback() {
    onFetch(result) {
      if      (result        == null) { ; }
      else if (result.size() == 0   ) { ; }
      else if (result.get(0) == null) { ; }
      else
        setFieldValue(refBoxStatus, result.get(0));
    }
  };

  fetchOne(q, populate);
}

// Overrides autogen's definition
loadBoxFrom(String uuid) {
  String tabgroup = "Box";
  setUuid(tabgroup, uuid);
  if (isNull(uuid)) return;

  FetchCallback updateBoxStatus = new FetchCallback() {
    onFetch(result) {
      populateEntityListsInTabGroup(tabgroup);
      updateBoxStatusWebView();
    }
  };

  showTabGroup(tabgroup, uuid, updateBoxStatus);
}

// Overrides autogen's definition
onShowBoxStatus () {
  saveTabGroup("Box_Status", "updateBoxStatusWebView()");
}
