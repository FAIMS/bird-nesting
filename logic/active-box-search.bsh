/***************************** ACTIVE BOX SEARCH ******************************/
makeVocab("DropDown", "Control/Active_Boxes/Box_Prefix", "Box Box Prefix");

addOnEvent("Control/Active_Boxes"              , "show"  , "activeBoxSearch()");
addOnEvent("Control/Active_Boxes/Active_Boxes" , "click" , "loadEntity()");
addOnEvent("Control/Active_Boxes/Search"       , "click" , "activeBoxSearch()");

activeBoxSearch() {
  String refBoxPrefix    = "Control/Active_Boxes/Box_Prefix";
  String refBoxId        = "Control/Active_Boxes/Box_ID";
  String refSearchButton = "Control/Active_Boxes/Search";
  String refActiveBoxes  = "Control/Active_Boxes/Active_Boxes";

  String boxPrefix = getFieldValue(refBoxPrefix);
  String boxId     = getFieldValue(refBoxId    );

  String q = "";
  q += " SELECT uuid, response";
  q += "   FROM latestNonDeletedArchEntFormattedIdentifiers";
  q += "  WHERE aenttypename = 'Box'";
  q += "    AND uuid IN (";
  q += "         SELECT parentuuid";
  q += "           FROM latestnondeletedaentvalue";
  q += "           JOIN vocabulary using (vocabid)";
  q += "           JOIN (";
  q += "                 SELECT childuuid, parentuuid";
  q += "                   FROM parentchild";
  q += "                   JOIN latestnondeletedarchent on (childuuid = uuid)";
  q += "                  WHERE childaenttypename = 'Box Status'";
  q += "               GROUP BY parentuuid";
  q += "                 HAVING aenttimestamp = max(aenttimestamp)";
  q += "                ) ON (childuuid = uuid)";
  q += "          WHERE vocabname = '{Active}'";
  q += "        )";
  q += "    AND uuid IN (";
  q += "                 SELECT uuid";
  q += "                   FROM latestnondeletedaentvalue";
  q += "                   JOIN attributekey using (attributeid) ";
  q += "                  WHERE measure LIKE '{boxId}'||'%'";
  q += "                    AND attributename = 'Box Box ID'";
  q += "        )";
  q += "    AND uuid IN (";
  q += "                 SELECT uuid";
  q += "                   FROM latestnondeletedaentvalue";
  q += "                  WHERE vocabid = {boxPrefix}";
  q += "        )";
  q += "  ORDER BY CAST(response AS numeric);";
  q += "  LIMIT ? OFFSET ?";
  q  = replaceFirst(q, "{boxId}",     boxId);
  q  = replaceFirst(q, "{boxPrefix}", boxPrefix);
  showWarning("", q + "");

  populateCursorList(refActiveBoxes, q, 25);
  refreshTabgroupCSS("Box");
}

